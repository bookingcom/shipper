apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: releases.shipper.booking.com
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: shipper.booking.com
  # version name to use for REST API: /apis/<group>/<version>
  version: v1alpha1
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: releases
    # singular name to be used as an alias on the CLI and for display
    singular: release
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: Release
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - rel
    categories:
    - all
    - shipper
  validation:
    openAPIV3Schema:
      properties:
        spec:
          type: object
          required:
          - targetStep
          properties:
            targetStep:
              type: integer
              minimum: 0
        environment:
          type: object
          required:
          - chart
          - strategy
          - values
          - clusterRequirements
          properties:
            chart:
              type: object
              required:
              - name
              - version
              properties:
                name:
                  type: string
                version:
                  type: string
            sidecars:
              type: array
              items:
                type: object
                required:
                - name
                - version
                properties:
                  name:
                    type: string
                  version:
                    type: string
            clusterRequirements:
              type: object
              required:
              - regions
              properties:
                regions:
                  type: array
                  items:
                    type: object
                capabilities:
                  type: array
                  items:
                    type: string
            strategy:
              type: object
              required:
              - steps
              properties:
                steps:
                  type: array
                  items:
                    type: object
                    required:
                    - name
                    - traffic
                    - capacity
                    properties:
                      name:
                        type: string
                      capacity:
                        type: object
                        required:
                        - incumbent
                        - contender
                        properties:
                          incumbent:
                            type: integer
                            minimum: 0
                            maximum: 100
                          contender:
                            type: integer
                            minimum: 0
                            maximum: 100
                      traffic:
                        type: object
                        required:
                        - incumbent
                        - contender
                        properties:
                          incumbent:
                            type: integer
                            minimum: 0
                            maximum: 100
                          contender:
                            type: integer
                            minimum: 0
                            maximum: 100
            values:
              type: object
