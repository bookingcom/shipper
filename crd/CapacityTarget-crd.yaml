apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: capacitytargets.shipper.booking.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(.type=="Operational")].status
    description: Whether the capacity target is operational.
    name: Operational
    type: string
  - JSONPath: .status.conditions[?(.type=="Ready")].status
    description: Whether the capacity target is ready.
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(.status=="False")].message
    description: Reason for the capactiy target to not be ready or operational.
    name: Reason
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: The capacity target's age.
    name: Age
    type: date
  # group name to use for REST API: /apis/<group>/<version>
  group: shipper.booking.com
  # version name to use for REST API: /apis/<group>/<version>
  versions:
  - name: v1alpha1
    served: true
    storage: true
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: capacitytargets
    # singular name to be used as an alias on the CLI and for display
    singular: capacitytarget
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: CapacityTarget
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - ct
    categories:
    - shipper
  subresources:
    status: {}
  # this validation will allow unknown fields in objects, but they'll just be
  # ignored (which is consistent with Kubernetes behavior in general)
  validation:
    openAPIV3Schema:
      properties:
        spec:
          type: object
          required:
          - clusters
          properties:
            clusters:
              type: array
              items:
                type: object
                required:
                - name
                - percent
                properties:
                  name:
                    type: string
                  percent:
                    minimum: 0
                    type: integer
