// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/bookingcom/shipper/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Applications returns a ApplicationInformer.
	Applications() ApplicationInformer
	// CapacityTargets returns a CapacityTargetInformer.
	CapacityTargets() CapacityTargetInformer
	// Clusters returns a ClusterInformer.
	Clusters() ClusterInformer
	// InstallationTargets returns a InstallationTargetInformer.
	InstallationTargets() InstallationTargetInformer
	// Releases returns a ReleaseInformer.
	Releases() ReleaseInformer
	// TrafficTargets returns a TrafficTargetInformer.
	TrafficTargets() TrafficTargetInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Applications returns a ApplicationInformer.
func (v *version) Applications() ApplicationInformer {
	return &applicationInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// CapacityTargets returns a CapacityTargetInformer.
func (v *version) CapacityTargets() CapacityTargetInformer {
	return &capacityTargetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Clusters returns a ClusterInformer.
func (v *version) Clusters() ClusterInformer {
	return &clusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// InstallationTargets returns a InstallationTargetInformer.
func (v *version) InstallationTargets() InstallationTargetInformer {
	return &installationTargetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Releases returns a ReleaseInformer.
func (v *version) Releases() ReleaseInformer {
	return &releaseInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// TrafficTargets returns a TrafficTargetInformer.
func (v *version) TrafficTargets() TrafficTargetInformer {
	return &trafficTargetInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
